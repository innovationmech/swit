---
description: 
globs: 
alwaysApply: false
---
# 构建脚本编写规范

本项目使用Makefile管理构建过程，构建脚本主要包括根目录的[Makefile](mdc:Makefile)以及`scripts/make-rules`目录下的各个模块化规则文件。

## Makefile结构规范

1. **变量声明**: 在Makefile顶部定义所有变量
   ```makefile
   GO := go
   SERVE_BIN_NAME := swit-serve
   OUTPUTDIR := _output
   ```

2. **包含子规则**: 使用include指令引入模块化的规则文件
   ```makefile
   include scripts/make-rules/copyright.mk
   ```

3. **默认目标**: 使用.DEFAULT_GOAL指定默认目标
   ```makefile
   .DEFAULT_GOAL := all
   ```

4. **PHONY目标**: 为所有非文件目标添加.PHONY声明
   ```makefile
   .PHONY: build
   build: build-serve build-ctl build-auth
   ```

5. **帮助信息**: 添加help目标并包含使用说明
   ```makefile
   define USAGE_OPTIONS
   Options:
     TIDY             Format the code.
     BUILD            Build the binaries.
   endef
   
   .PHONY: help
   help:
       @echo "$$USAGE_OPTIONS"
   ```

## 模块化规则

1. **规则文件命名**: 按功能命名，以.mk为扩展名
   - 例如：[scripts/make-rules/copyright.mk](mdc:scripts/make-rules/copyright.mk)

2. **版权检查规则**: 使用copyright.mk处理版权声明
   ```makefile
   .PHONY: copyright
   copyright:
       @$(MAKE) copyright-check
       @if [ -n "$(MISSING_COPYRIGHT)" ]; then \
           $(MAKE) copyright-add; \
       fi
   ```

## Docker镜像构建规范

1. **Dockerfile位置**: 在`build/docker/{服务名}/`目录下
   - 例如：[build/docker/swit-serve/Dockerfile](mdc:build/docker/swit-serve/Dockerfile)

2. **镜像构建命令**: 在Makefile中定义镜像构建目标
   ```makefile
   .PHONY: image-serve
   image-serve:
       @echo "Building Docker image for swit-serve"
       @$(DOCKER) build -f build/docker/swit-serve/Dockerfile -t $(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_TAG) .
   ```

## 构建输出规范

1. **输出目录**: 所有构建产物输出到`_output/{应用名}/`目录
   ```makefile
   @mkdir -p $(OUTPUTDIR)/$(SERVE_BIN_NAME)
   @$(GO) build -o $(OUTPUTDIR)/$(SERVE_BIN_NAME)/$(SERVE_BIN_NAME) $(SERVE_MAIN_DIR)/$(SERVE_MAIN_FILE)
   ```

2. **清理规则**: 提供clean目标清理所有构建产物
   ```makefile
   .PHONY: clean
   clean:
       @echo "Cleaning go programs"
       @$(RM) -rf $(OUTPUTDIR)/
   ```

## 新增构建规则时的注意事项

1. 遵循已有的命名规范和目录结构
2. 为每条规则添加简洁清晰的注释说明其功能
3. 使用@前缀抑制命令回显，保持输出简洁
4. 复杂规则应拆分为子规则并放入scripts/make-rules/目录的独立文件中
5. 所有重要规则应在help目标中列出使用说明
