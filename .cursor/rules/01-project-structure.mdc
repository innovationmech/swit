---
description: 
globs: 
alwaysApply: false
---
# 项目结构

这是一个基于Go的微服务项目，名为swit。该项目由多个组件组成，采用了典型的Go项目结构。

## 主要目录结构

- `cmd/` - 包含所有可执行程序的主要入口点
  - `switblog/` - 博客服务入口
  - `swit-auth/` - 认证服务入口
  - `swit-serve/` - 主服务入口
  - `switctl/` - 命令行工具入口

- `internal/` - 包含项目内部的代码，不对外暴露
  - `pkg/` - 项目内共享的包
    - `discovery/` - 服务发现相关功能
    - `middleware/` - HTTP中间件
    - `utils/` - 通用工具函数
    - `logger/` - 日志记录功能
  - `switblog/` - 博客服务实现
  - `switauth/` - 认证服务实现
  - `switserve/` - 主服务实现
  - `switctl/` - 命令行工具实现
  - `component-base/` - 基础组件

- `api/` - API定义和协议文件

## 配置文件

- `swit.yaml` - 主服务配置
- `switauth.yaml` - 认证服务配置
- `switblog.yaml` - 博客服务配置

## 构建与部署

项目使用Makefile来管理构建、测试和部署过程。可以通过`make`命令执行各种操作。
