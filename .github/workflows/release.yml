name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    # 生成必需的代码
    - name: Install Proto tools
      run: make proto-setup

    - name: Install Swagger tools
      run: make swagger-setup

    - name: Generate proto code
      run: make proto

    - name: Generate swagger docs
      run: make swagger

    - name: Run tests
      run: make test

    - name: Build binaries
      run: |
        make build-release
        
    - name: Generate changelog
      id: changelog
      run: |
        # 获取当前标签
        TAG=${GITHUB_REF#refs/tags/}
        echo "tag=${TAG}" >> $GITHUB_OUTPUT
        
        # 获取上一个标签
        PREV_TAG=$(git describe --tags --abbrev=0 ${TAG}^ 2>/dev/null || echo "")
        
        echo "## 🚀 What's Changed" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        
        if [ -n "$PREV_TAG" ]; then
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${TAG}" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # 获取提交记录
          git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges >> CHANGELOG.md
        else
          echo "🎉 Initial release" >> CHANGELOG.md
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        name: Release ${{ steps.changelog.outputs.tag }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        files: |
          _output/build/**/*
        token: ${{ secrets.GITHUB_TOKEN }}

  docker-release:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker images
      run: |
        # 构建各个服务的 Docker 镜像
        make docker
