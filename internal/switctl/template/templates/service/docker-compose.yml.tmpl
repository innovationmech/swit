version: '3.8'

services:
  {{.Service.Name | kebabCase}}:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: {{.Service.Version}}
        BUILD_DATE: "{{now.Format "2006-01-02T15:04:05Z"}}"
        GIT_COMMIT: "unknown"
    image: {{.Service.Name | kebabCase}}:{{.Service.Version}}
    container_name: {{.Service.Name | kebabCase}}
    restart: unless-stopped
    ports:
      - "{{.Service.Ports.HTTP}}:{{.Service.Ports.HTTP}}"
      - "{{.Service.Ports.GRPC}}:{{.Service.Ports.GRPC}}"
    environment:
      - {{.Service.Name | screamingSnakeCase}}_SERVER_HTTP_HOST=0.0.0.0
      - {{.Service.Name | screamingSnakeCase}}_SERVER_HTTP_PORT={{.Service.Ports.HTTP}}
      - {{.Service.Name | screamingSnakeCase}}_SERVER_GRPC_HOST=0.0.0.0
      - {{.Service.Name | screamingSnakeCase}}_SERVER_GRPC_PORT={{.Service.Ports.GRPC}}
{{- if .Service.Features.Database}}
      - {{.Service.Name | screamingSnakeCase}}_DATABASE_HOST={{.Service.Name | kebabCase}}-db
      - {{.Service.Name | screamingSnakeCase}}_DATABASE_PORT={{.Service.Database.Port}}
      - {{.Service.Name | screamingSnakeCase}}_DATABASE_DATABASE={{.Service.Database.Database}}
      - {{.Service.Name | screamingSnakeCase}}_DATABASE_USERNAME={{.Service.Database.Username}}
      - {{.Service.Name | screamingSnakeCase}}_DATABASE_PASSWORD={{.Service.Database.Password}}
{{- end}}
{{- if .Service.Features.Cache}}
      - {{.Service.Name | screamingSnakeCase}}_CACHE_HOST={{.Service.Name | kebabCase}}-redis
      - {{.Service.Name | screamingSnakeCase}}_CACHE_PORT=6379
{{- end}}
{{- if .Service.Features.MessageQueue}}
      - {{.Service.Name | screamingSnakeCase}}_MESSAGE_QUEUE_HOST={{.Service.Name | kebabCase}}-rabbitmq
      - {{.Service.Name | screamingSnakeCase}}_MESSAGE_QUEUE_PORT=5672
{{- end}}
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    depends_on:
{{- if .Service.Features.Database}}
      - {{.Service.Name | kebabCase}}-db
{{- end}}
{{- if .Service.Features.Cache}}
      - {{.Service.Name | kebabCase}}-redis
{{- end}}
{{- if .Service.Features.MessageQueue}}
      - {{.Service.Name | kebabCase}}-rabbitmq
{{- end}}
    networks:
      - {{.Service.Name | kebabCase}}-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:{{.Service.Ports.HTTP}}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

{{- if .Service.Features.Database}}

  {{.Service.Name | kebabCase}}-db:
{{- if eq .Service.Database.Type "mysql"}}
    image: mysql:8.0
    container_name: {{.Service.Name | kebabCase}}-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: {{.Service.Database.Password}}
      MYSQL_DATABASE: {{.Service.Database.Database}}
      MYSQL_USER: {{.Service.Database.Username}}
      MYSQL_PASSWORD: {{.Service.Database.Password}}
    ports:
      - "{{.Service.Database.Port}}:3306"
    volumes:
      - {{.Service.Name | kebabCase}}-mysql-data:/var/lib/mysql
{{- else if eq .Service.Database.Type "postgres"}}
    image: postgres:15
    container_name: {{.Service.Name | kebabCase}}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: {{.Service.Database.Database}}
      POSTGRES_USER: {{.Service.Database.Username}}
      POSTGRES_PASSWORD: {{.Service.Database.Password}}
    ports:
      - "{{.Service.Database.Port}}:5432"
    volumes:
      - {{.Service.Name | kebabCase}}-postgres-data:/var/lib/postgresql/data
{{- end}}
    networks:
      - {{.Service.Name | kebabCase}}-network
    healthcheck:
{{- if eq .Service.Database.Type "mysql"}}
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
{{- else if eq .Service.Database.Type "postgres"}}
      test: ["CMD-SHELL", "pg_isready -U {{.Service.Database.Username}}"]
{{- end}}
      interval: 10s
      timeout: 5s
      retries: 5
{{- end}}

{{- if .Service.Features.Cache}}

  {{.Service.Name | kebabCase}}-redis:
    image: redis:7-alpine
    container_name: {{.Service.Name | kebabCase}}-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - {{.Service.Name | kebabCase}}-redis-data:/data
    networks:
      - {{.Service.Name | kebabCase}}-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
{{- end}}

{{- if .Service.Features.MessageQueue}}

  {{.Service.Name | kebabCase}}-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: {{.Service.Name | kebabCase}}-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - {{.Service.Name | kebabCase}}-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - {{.Service.Name | kebabCase}}-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
{{- end}}

networks:
  {{.Service.Name | kebabCase}}-network:
    driver: bridge

volumes:
{{- if .Service.Features.Database}}
{{- if eq .Service.Database.Type "mysql"}}
  {{.Service.Name | kebabCase}}-mysql-data:
{{- else if eq .Service.Database.Type "postgres"}}
  {{.Service.Name | kebabCase}}-postgres-data:
{{- end}}
{{- end}}
{{- if .Service.Features.Cache}}
  {{.Service.Name | kebabCase}}-redis-data:
{{- end}}
{{- if .Service.Features.MessageQueue}}
  {{.Service.Name | kebabCase}}-rabbitmq-data:
{{- end}}