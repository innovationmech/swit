# SWIT 分布式追踪演示环境配置模板
# 复制此文件为 .env 并根据需要修改配置

# ===== 基础配置 =====

# 环境类型 (development, staging, production)
ENVIRONMENT=development

# 项目名称
PROJECT_NAME=swit-distributed-tracing-demo

# 基础域名（如果部署到生产环境）
BASE_DOMAIN=localhost

# ===== 服务端口配置 =====

# Jaeger 相关端口
JAEGER_UI_PORT=16686
JAEGER_COLLECTOR_HTTP_PORT=14268
JAEGER_COLLECTOR_GRPC_PORT=14250
JAEGER_AGENT_COMPACT_PORT=6831
JAEGER_AGENT_BINARY_PORT=6832
JAEGER_AGENT_CONFIG_PORT=5778
JAEGER_HEALTH_CHECK_PORT=14269
JAEGER_METRICS_PORT=14271
JAEGER_OTLP_GRPC_PORT=4317
JAEGER_OTLP_HTTP_PORT=4318

# 业务服务端口
ORDER_SERVICE_HTTP_PORT=8081
ORDER_SERVICE_GRPC_PORT=9081

PAYMENT_SERVICE_GRPC_PORT=9082

INVENTORY_SERVICE_HTTP_PORT=8083
INVENTORY_SERVICE_GRPC_PORT=9083

# ===== Jaeger 配置 =====

# 存储配置
JAEGER_STORAGE_TYPE=memory
# 对于生产环境，可以使用 elasticsearch 或 cassandra
# JAEGER_STORAGE_TYPE=elasticsearch

# 内存存储配置
JAEGER_MEMORY_MAX_TRACES=50000

# Elasticsearch 配置（如果使用）
# JAEGER_ES_SERVER_URLS=http://elasticsearch:9200
# JAEGER_ES_USERNAME=elastic
# JAEGER_ES_PASSWORD=changeme
# JAEGER_ES_INDEX_PREFIX=jaeger

# Cassandra 配置（如果使用）
# JAEGER_CASSANDRA_KEYSPACE=jaeger_v1_test
# JAEGER_CASSANDRA_SERVERS=cassandra:9042

# 采样配置
JAEGER_SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling.json

# 日志配置
JAEGER_LOG_LEVEL=info
JAEGER_LOG_FORMAT=json

# Collector 配置
JAEGER_COLLECTOR_ZIPKIN_HOST_PORT=:9411
JAEGER_COLLECTOR_OTLP_ENABLED=true

# Query 配置
JAEGER_QUERY_BASE_PATH=/
JAEGER_QUERY_UI_CONFIG=/etc/jaeger/ui-config.json

# ===== 追踪配置 =====

# OpenTelemetry 配置
OTEL_SERVICE_NAME=swit-tracing-demo
OTEL_TRACES_EXPORTER=jaeger
OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
OTEL_RESOURCE_ATTRIBUTES=service.name=swit-demo,service.version=1.0.0

# 采样配置
OTEL_TRACES_SAMPLER=parentbased_traceidratio
OTEL_TRACES_SAMPLER_ARG=1.0

# Jaeger Exporter 配置
JAEGER_ENDPOINT=http://jaeger:14268/api/traces
JAEGER_USER=
JAEGER_PASSWORD=

# ===== 服务配置 =====

# 订单服务配置
ORDER_SERVICE_NAME=order-service
ORDER_SERVICE_VERSION=1.0.0
ORDER_SERVICE_DATABASE_DSN=./data/orders.db
ORDER_SERVICE_DATABASE_TYPE=sqlite
ORDER_SERVICE_DATABASE_MAX_CONNECTIONS=10
ORDER_SERVICE_CACHE_ENABLED=true
ORDER_SERVICE_CACHE_TTL=300s

# 支付服务配置
PAYMENT_SERVICE_NAME=payment-service
PAYMENT_SERVICE_VERSION=1.0.0
PAYMENT_SERVICE_SIMULATION_MODE=true
PAYMENT_SERVICE_TIMEOUT=30s
PAYMENT_SERVICE_RETRY_ATTEMPTS=3
PAYMENT_SERVICE_CIRCUIT_BREAKER_ENABLED=true

# 库存服务配置
INVENTORY_SERVICE_NAME=inventory-service
INVENTORY_SERVICE_VERSION=1.0.0
INVENTORY_SERVICE_DATABASE_DSN=./data/inventory.db
INVENTORY_SERVICE_DATABASE_TYPE=sqlite
INVENTORY_SERVICE_CACHE_ENABLED=true
INVENTORY_SERVICE_CACHE_TTL=300s

# ===== 日志配置 =====

# 全局日志级别 (debug, info, warn, error)
LOG_LEVEL=info

# 日志格式 (text, json)
LOG_FORMAT=json

# 日志输出 (stdout, file)
LOG_OUTPUT=stdout

# 日志文件路径（如果使用文件输出）
LOG_FILE_PATH=./data/logs/app.log

# 日志轮转配置
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10
LOG_MAX_AGE=30

# ===== 性能配置 =====

# HTTP 服务配置
HTTP_READ_TIMEOUT=30s
HTTP_WRITE_TIMEOUT=30s
HTTP_IDLE_TIMEOUT=120s
HTTP_MAX_HEADER_SIZE=1048576

# gRPC 服务配置
GRPC_MAX_RECV_MSG_SIZE=4194304
GRPC_MAX_SEND_MSG_SIZE=4194304
GRPC_CONNECTION_TIMEOUT=30s
GRPC_KEEPALIVE_TIME=30s
GRPC_KEEPALIVE_TIMEOUT=5s

# 数据库连接池配置
DATABASE_MAX_OPEN_CONNECTIONS=10
DATABASE_MAX_IDLE_CONNECTIONS=5
DATABASE_CONNECTION_MAX_LIFETIME=300s

# ===== 监控配置 =====

# 健康检查配置
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health
HEALTH_CHECK_INTERVAL=30s

# 指标收集配置
METRICS_ENABLED=true
METRICS_PATH=/metrics
METRICS_NAMESPACE=swit_demo

# Prometheus 配置
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=9090

# ===== 安全配置 =====

# TLS 配置
TLS_ENABLED=false
TLS_CERT_FILE=
TLS_KEY_FILE=
TLS_CA_FILE=

# CORS 配置
CORS_ENABLED=true
CORS_ALLOWED_ORIGINS=*
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=*

# 认证配置（如果需要）
AUTH_ENABLED=false
AUTH_JWT_SECRET=
AUTH_JWT_EXPIRES_IN=24h

# ===== Docker 网络配置 =====

# Docker 网络名称
DOCKER_NETWORK=tracing-network

# Docker 网络子网
DOCKER_SUBNET=172.20.0.0/16

# ===== 数据持久化配置 =====

# Docker 数据卷配置
ORDER_DATA_VOLUME=distributed-tracing_order-data
INVENTORY_DATA_VOLUME=distributed-tracing_inventory-data

# 数据目录
DATA_DIR=./data
LOG_DIR=./data/logs
BACKUP_DIR=./data/backups

# ===== 开发配置 =====

# 开发模式配置
DEV_MODE=true
DEBUG_ENABLED=true
HOT_RELOAD_ENABLED=false

# 测试配置
TEST_DATABASE_DSN=./data/test.db
TEST_LOG_LEVEL=debug

# Mock 配置
MOCK_PAYMENT_SERVICE=false
MOCK_INVENTORY_SERVICE=false
MOCK_EXTERNAL_APIS=true

# ===== 生产环境配置 =====

# 生产环境特定配置（仅在生产环境使用）
# PROD_DATABASE_DSN=postgres://user:pass@db:5432/dbname
# PROD_REDIS_URL=redis://redis:6379/0
# PROD_KAFKA_BROKERS=kafka1:9092,kafka2:9092

# 负载均衡配置
# LOAD_BALANCER_ENABLED=false
# UPSTREAM_SERVERS=server1:8080,server2:8080

# 集群配置
# CLUSTER_ENABLED=false
# CLUSTER_NODE_ID=node-1
# CLUSTER_DISCOVERY_URL=consul://consul:8500

# ===== 扩展配置 =====

# 服务网格配置（如果使用 Istio 等）
SERVICE_MESH_ENABLED=false
ISTIO_INJECTION=false

# 消息队列配置
MESSAGE_QUEUE_ENABLED=false
RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
KAFKA_BROKERS=kafka:9092

# 缓存配置
CACHE_TYPE=memory
REDIS_URL=redis://redis:6379/0
MEMCACHED_SERVERS=memcached:11211

# 对象存储配置
OBJECT_STORAGE_ENABLED=false
S3_BUCKET=
S3_REGION=
S3_ACCESS_KEY=
S3_SECRET_KEY=

# ===== 实验性功能配置 =====

# 分布式追踪增强功能
ENHANCED_TRACING_ENABLED=false
TRACE_BAGGAGE_ENABLED=false
TRACE_SAMPLING_STRATEGIES_POLLING_INTERVAL=60s

# 自动监控配置
AUTO_MONITORING_ENABLED=false
ANOMALY_DETECTION_ENABLED=false
PERFORMANCE_PROFILING_ENABLED=false

# ===== 第三方集成配置 =====

# APM 工具集成
APM_TOOL=jaeger
DATADOG_API_KEY=
NEW_RELIC_LICENSE_KEY=

# 日志聚合服务
LOG_AGGREGATION_SERVICE=none
ELASTIC_SEARCH_URL=
FLUENTD_HOST=

# 告警服务
ALERTING_SERVICE=none
SLACK_WEBHOOK_URL=
PAGERDUTY_SERVICE_KEY=

# ===== 备份和恢复配置 =====

# 备份配置
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=7
BACKUP_STORAGE_TYPE=local

# 恢复配置
AUTO_RECOVERY_ENABLED=false
RECOVERY_POINT_OBJECTIVE=1h
RECOVERY_TIME_OBJECTIVE=4h