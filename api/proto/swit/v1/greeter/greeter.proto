syntax = "proto3";

package swit.v1.greeter;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/innovationmech/swit/api/gen/go/proto/swit/v1/greeter";

// Greeter service provides greeting functionality
service GreeterService {
  // SayHello greets a person
  rpc SayHello(SayHelloRequest) returns (SayHelloResponse) {
    option (google.api.http) = {
      post: "/v1/greeter/hello"
      body: "*"
    };
  }

  // SayHelloStream provides streaming greeting
  rpc SayHelloStream(SayHelloStreamRequest) returns (stream SayHelloStreamResponse) {
    option (google.api.http) = {
      post: "/v1/greeter/hello/stream"
      body: "*"
    };
  }
}

// SayHelloRequest represents a greeting request
message SayHelloRequest {
  // Name of the person to greet
  string name = 1;
  // Language for the greeting (optional)
  string language = 2;
  // Metadata for the request
  RequestMetadata metadata = 3;
}

// SayHelloResponse represents a greeting response
message SayHelloResponse {
  // The greeting message
  string message = 1;
  // Timestamp of the response
  google.protobuf.Timestamp timestamp = 2;
  // Response metadata
  ResponseMetadata metadata = 3;
}

// SayHelloStreamRequest represents a streaming greeting request
message SayHelloStreamRequest {
  // Name of the person to greet
  string name = 1;
  // Number of greetings to send
  int32 count = 2;
  // Interval between greetings in seconds
  int32 interval_seconds = 3;
}

// SayHelloStreamResponse represents a streaming greeting response
message SayHelloStreamResponse {
  // The greeting message
  string message = 1;
  // Timestamp of the response
  google.protobuf.Timestamp timestamp = 2;
  // Response metadata
  ResponseMetadata metadata = 3;
  // Sequence number for this stream item
  int32 sequence = 4;
}

// RequestMetadata contains common request metadata
message RequestMetadata {
  // Request ID for tracking
  string request_id = 1;
  // User agent information
  string user_agent = 2;
  // IP address of the client
  string client_ip = 3;
}

// ResponseMetadata contains common response metadata
message ResponseMetadata {
  // Request ID for tracking
  string request_id = 1;
  // Server instance ID
  string server_id = 2;
  // Processing time in milliseconds
  int64 processing_time_ms = 3;
}
